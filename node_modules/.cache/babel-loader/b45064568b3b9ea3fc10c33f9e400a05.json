{"ast":null,"code":"var _jsxFileName = \"/Users/cameronlarrabee/dev/uubc/project-3/Speakeasy/src/components/Modal/index.js\";\nimport React from \"react\";\n\nfunction Modal(props) {\n  return React.createElement(React.Fragment, null, this.props.searchedInfo.map(searchedInfo => {\n    return React.createElement(\"div\", {\n      className: \"modal fade modal-\".concat(props.searchedInfo.id),\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"myExtraLargeModalLabel\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog modal-xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container p-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, props.searchedInfo.title))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3 d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: props.searchedInfo.img,\n      alt: props.searchedInfo.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Ingredients\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, props.searchedInfo.ingredientsArr.map((ingredient, index) => {\n      if (ingredient === \"\") {\n        return React.createElement(React.Fragment, null);\n      } else {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \" \", ingredient);\n      }\n    })))), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Measurements\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"measureList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, props.searchedInfo.measureArr.map((measure, index) => {\n      if (measure === \" \") {\n        return React.createElement(React.Fragment, null);\n      } else if (measure === \"â†µ\") {\n        return React.createElement(React.Fragment, null);\n      } else if (measure === \"\") {\n        return React.createElement(React.Fragment, null);\n      } else {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, measure);\n      }\n    })))), React.createElement(\"div\", {\n      className: \"col-md-3 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Instructions\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, props.searchedInfo.instructions))))))));\n  }));\n}\n\nexport default Modal;","map":{"version":3,"sources":["/Users/cameronlarrabee/dev/uubc/project-3/Speakeasy/src/components/Modal/index.js"],"names":["React","Modal","props","searchedInfo","map","id","title","img","ingredientsArr","ingredient","index","measureArr","measure","instructions"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n\nfunction Modal(props) {\n  return <>\n    {this.props.searchedInfo.map((searchedInfo) => {\n      return (\n        <div className={`modal fade modal-${props.searchedInfo.id}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myExtraLargeModalLabel\" aria-hidden=\"true\">\n          <div className=\"modal-dialog modal-xl\">\n            <div className=\"modal-content\">\n              <div className=\"container p-4\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <h1 className=\"text-center\">{props.searchedInfo.title}</h1>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-3 d-flex justify-content-center\">\n                    <img src={props.searchedInfo.img} alt={props.searchedInfo.title} />\n                  </div>\n\n                  <div className=\"col-md-3\">\n                    <h4>Ingredients</h4>\n                    <div className=\"row\">\n                      <ul>\n                        {props.searchedInfo.ingredientsArr.map((ingredient, index) => {\n                          if (ingredient === \"\") {\n                            return (<></>)\n                          } else {\n                            return (\n                              <li key={index}> {ingredient}</li>\n                            )\n                          }\n\n                        })}\n                      </ul>\n                    </div>\n\n                  </div>\n                  <div className=\"col-md-3\">\n                    <div className=\"row\">\n                      <h4>Measurements</h4>\n                    </div>\n                    <div className=\"row\">\n                      <ul id=\"measureList\">\n                        {props.searchedInfo.measureArr.map((measure, index) => {\n                          if (measure === \" \") {\n                            return (<></>)\n                          } else if (measure === \"â†µ\") {\n                            return (<></>)\n                          } else if (measure === \"\") {\n                            return (<></>)\n                          } else {\n                            return (\n                              <li key={index}>{measure}</li>\n                            )\n                          }\n\n                        })}\n                      </ul>\n                    </div>\n\n                  </div>\n\n                  <div className=\"col-md-3 \">\n                    <div className=\"row\">\n                      <h4>Instructions</h4>\n                      <p>{props.searchedInfo.instructions}</p>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    })}\n  </>\n}\nexport default Modal;"]},"metadata":{},"sourceType":"module"}