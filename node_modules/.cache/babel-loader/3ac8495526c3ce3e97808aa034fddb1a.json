{"ast":null,"code":"var _jsxFileName = \"/Users/cameronlarrabee/dev/uubc/project-3/Speakeasy/src/components/Results/index.js\";\nimport React, { Component } from \"react\";\nimport \"./style.css\"; // import { Container } from \"../Grid\";\n\nimport Drink from \"../Drink\";\n\nclass Results extends Component {\n  render() {\n    switch (this.props.searchBy) {\n      case \"searchByName\":\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, this.props.drinks.map(drink => {\n          return React.createElement(Drink, {\n            drink: drink,\n            key: drink.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16\n            },\n            __self: this\n          });\n        }));\n\n      case \"searchByIngredient\":\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, this.props.drinks.map(drink => {\n          return React.createElement(Drink, {\n            drink: drink,\n            key: drink.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          });\n        }));\n\n      case \"searchIngredientByName\":\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, this.props.drinks.map(drink => {\n          return React.createElement(\"div\", {\n            className: \"col-lg-12 col-md-12 col-sm-12 p-3\",\n            id: drink.id,\n            key: drink.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            className: \"text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, drink.title), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, drink.description));\n        }));\n\n      case \"random\":\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, this.props.drinks.map(drink => {\n          return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n            className: \"col-lg-4 col-md-6 col-sm-6 p-3\",\n            id: drink.id,\n            key: drink.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            className: \"text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, drink.title), React.createElement(\"div\", {\n            className: \"d-flex justify-content-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: drink.img,\n            alt: drink.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }))), React.createElement(\"div\", {\n            className: \"col-md-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, \"Ingredients\"), React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, this.props.drink.ingredientsArr.map((ingredient, index) => {\n            if (ingredient === \"\") {\n              return React.createElement(React.Fragment, null);\n            } else {\n              return React.createElement(\"li\", {\n                key: index,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 61\n                },\n                __self: this\n              }, \" \", ingredient);\n            }\n          })))), React.createElement(\"div\", {\n            className: \"col-md-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, \"Measurements\")), React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, React.createElement(\"ul\", {\n            id: \"measureList\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, this.props.drink.measureArr.map((measure, index) => {\n            if (measure === \" \") {\n              return React.createElement(React.Fragment, null);\n            } else if (measure === \"â†µ\") {\n              return React.createElement(React.Fragment, null);\n            } else if (measure === \"\") {\n              return React.createElement(React.Fragment, null);\n            } else {\n              return React.createElement(\"li\", {\n                key: index,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 85\n                },\n                __self: this\n              }, measure);\n            }\n          })))), React.createElement(\"div\", {\n            className: \"col-lg-4 col-md-3 col-sm-3 p-3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            className: \"text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, \"Instructions\"), React.createElement(\"p\", {\n            className: \"text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, drink.instructions)));\n        }));\n\n      default:\n        return React.createElement(\"div\", {\n          className: \"col-md-12 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Search for some Great Drinks!\"));\n    }\n  }\n\n}\n\nexport default Results; //     </div >\n// < input id = \"search\" ></input >\n//   <button onClick={() => this.searchDatabase(document.getElementById(\"search\").value)}>button</button>\n//   <div className=\"drinks\">\n//     <this.drinkRenderer />\n//   </div>","map":{"version":3,"sources":["/Users/cameronlarrabee/dev/uubc/project-3/Speakeasy/src/components/Results/index.js"],"names":["React","Component","Drink","Results","render","props","searchBy","drinks","map","drink","id","title","description","img","ingredientsArr","ingredient","index","measureArr","measure","instructions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\"\n// import { Container } from \"../Grid\";\nimport Drink from \"../Drink\";\n\n\nclass Results extends Component {\n\n\n  render() {\n    switch (this.props.searchBy) {\n      case \"searchByName\":\n        return <div className=\"row\">\n          {this.props.drinks.map((drink) => {\n            return (\n              <Drink drink={drink} key={drink.id} />\n            )\n          })}\n        </div>\n      case \"searchByIngredient\":\n        return <div className=\"row\">\n          {this.props.drinks.map((drink) => {\n            return (\n              <Drink drink={drink} key={drink.id} />\n            )\n          })}\n        </div>\n\n      case \"searchIngredientByName\":\n        return <div className=\"row\">\n          {this.props.drinks.map((drink) => {\n            return (\n              <div className=\"col-lg-12 col-md-12 col-sm-12 p-3\" id={drink.id} key={drink.id}>\n                <h4 className=\"text-center\">{drink.title}</h4>\n                <p>{drink.description}</p>\n              </div>\n            )\n          })}\n        </div>\n\n      case \"random\":\n        return <div className=\"row\">\n          {this.props.drinks.map((drink) => {\n            return (\n              <>\n                <div className=\"col-lg-4 col-md-6 col-sm-6 p-3\" id={drink.id} key={drink.id}>\n                  <h4 className=\"text-center\">{drink.title}</h4>\n                  <div className=\"d-flex justify-content-center\">\n                    <img src={drink.img} alt={drink.title} />\n                  </div>\n                </div>\n                <div className=\"col-md-2\">\n                  <h4>Ingredients</h4>\n                  <div className=\"row\">\n                    <ul>\n                      {this.props.drink.ingredientsArr.map((ingredient, index) => {\n                        if (ingredient === \"\") {\n                          return (<></>)\n                        } else {\n                          return (\n                            <li key={index}> {ingredient}</li>\n                          )\n                        }\n\n                      })}\n                    </ul>\n                  </div>\n\n                </div>\n                <div className=\"col-md-2\">\n                  <div className=\"row\">\n                    <h4>Measurements</h4>\n                  </div>\n                  <div className=\"row\">\n                    <ul id=\"measureList\">\n                      {this.props.drink.measureArr.map((measure, index) => {\n                        if (measure === \" \") {\n                          return (<></>)\n                        } else if (measure === \"â†µ\") {\n                          return (<></>)\n                        } else if (measure === \"\") {\n                          return (<></>)\n                        } else {\n                          return (\n                            <li key={index}>{measure}</li>\n                          )\n                        }\n\n                      })}\n                    </ul>\n                  </div>\n\n                </div>\n                <div className=\"col-lg-4 col-md-3 col-sm-3 p-3\">\n                  <h3 className=\"text-center\">Instructions</h3>\n                  <p className=\"text-center\">{drink.instructions}</p>\n                </div>\n              </>\n            )\n          })}\n\n        </div>\n      default:\n        return <div className=\"col-md-12 text-center\">\n          <h1>Search for some Great Drinks!</h1>\n        </div>\n    }\n  }\n}\nexport default Results\n  //     </div >\n  // < input id = \"search\" ></input >\n  //   <button onClick={() => this.searchDatabase(document.getElementById(\"search\").value)}>button</button>\n  //   <div className=\"drinks\">\n  //     <this.drinkRenderer />\n  //   </div>"]},"metadata":{},"sourceType":"module"}