{"ast":null,"code":"var _jsxFileName = \"/Users/christianpetersen/dev/uubc/project-3/Speakeasy-1/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Container } from \"./components/Grid\";\nimport Search from \"./components/Search\";\nimport Results from './components/Results';\nimport API from \"./utils/API\";\nimport Nav from \"./components/Nav\";\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      searchBy: \"\",\n      drinkArray: [],\n      // searchedDrink: \"\",\n      // searchedInfo: [],\n      error: \"\" // handleData = event => {\n      //   this.setState({ searchedDrink: event.target.alt })\n      //   console.log(this.state.searchedDrink)\n      //   event.preventDefault();\n      //   API.searchByName(this.state.searchedDrink)\n      //     .then((res) => {\n      //       console.log(res)\n      //       if (res.data.drinks === \"error\") {\n      //         throw new Error(res.data.drinks);\n      //       } else {\n      //         let results = res.data.drinks\n      //         results = results.map(result => {\n      //           //store each book information in a new object \n      //           result = {\n      //             id: result.idDrink,\n      //             title: result.strDrink,\n      //             img: result.strDrinkThumb,\n      //             instructions: result.strInstructions,\n      //             ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4,\n      //             result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9,\n      //             result.strIngredient10],\n      //             measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4,\n      //             result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9,\n      //             result.strIngredient10]\n      //           }\n      //           return result;\n      //         })\n      //         this.setState({ searchedInfo: results, error: \"\" })\n      //       }\n      //     })\n      //     .catch(err => this.setState({ error: err.items }));\n      //   //if the state matches the event.arget.value no search is needed\n      //   // else if state does not match event target hit the api\n      // }\n\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.handleSelectChange = event => {\n      this.setState({\n        searchBy: event.target.value,\n        drinkArray: []\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      switch (this.state.searchBy) {\n        case \"searchByName\":\n          event.preventDefault();\n          API.searchByName(this.state.search).then(res => {\n            console.log(res);\n\n            if (res.data.drinks === \"error\") {\n              throw new Error(res.data.drinks);\n            } else {\n              let results = res.data.drinks;\n              results = results.map(result => {\n                //store each book information in a new object \n                result = {\n                  id: result.idDrink,\n                  title: result.strDrink,\n                  img: result.strDrinkThumb,\n                  instructions: result.strInstructions,\n                  ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4, result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9, result.strIngredient10],\n                  measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4, result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9, result.strIngredient10]\n                };\n                return result;\n              });\n              this.setState({\n                drinkArray: results,\n                error: \"\"\n              });\n            }\n          }).catch(err => this.setState({\n            error: err.items\n          }));\n          console.log(this.state.drinkArray);\n          break;\n\n        case \"searchIngredientByName\":\n          event.preventDefault();\n          API.searchIngredientByName(this.state.search).then(res => {\n            console.log(res);\n\n            if (res.data.ingredients === \"error\") {\n              throw new Error(res.data.ingredients);\n            } else {\n              let results = res.data.ingredients;\n              results = results.map(result => {\n                //store each book information in a new object \n                result = {\n                  id: result.idIngredient,\n                  title: result.strIngredient,\n                  description: result.strDescription\n                };\n                return result;\n              });\n              this.setState({\n                drinkArray: results,\n                error: \"\"\n              });\n            }\n          }).catch(err => this.setState({\n            error: err.items\n          }));\n          console.log(this.state.drinkArray);\n          break;\n\n        case \"searchByIngredient\":\n          event.preventDefault();\n          API.searchByIngredient(this.state.search).then(res => {\n            console.log(res);\n\n            if (res.data.drinks === \"error\") {\n              throw new Error(res.data.drinks);\n            } else {\n              let results = res.data.drinks;\n              results = results.map(result => {\n                //store each book information in a new object \n                result = {\n                  key: result.idDrink,\n                  id: result.idDrink,\n                  title: result.strDrink,\n                  img: result.strDrinkThumb,\n                  instructions: result.strInstructions,\n                  ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4, result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9, result.strIngredient10],\n                  measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4, result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9, result.strIngredient10]\n                };\n                return result;\n              });\n              this.setState({\n                drinkArray: results,\n                error: \"\"\n              });\n            }\n          }).catch(err => this.setState({\n            error: err.items\n          }));\n          console.log(this.state.drinkArray);\n          break;\n\n        case \"random\":\n          event.preventDefault();\n          API.random().then(res => {\n            console.log(res);\n\n            if (res.data.drinks === \"error\") {\n              throw new Error(res.data.drinks);\n            } else {\n              let results = res.data.drinks;\n              results = results.map(result => {\n                //store each book information in a new object \n                result = {\n                  key: result.idDrink,\n                  id: result.idDrink,\n                  title: result.strDrink,\n                  img: result.strDrinkThumb,\n                  instructions: result.strInstructions,\n                  ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4, result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9, result.strIngredient10],\n                  measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4, result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9, result.strIngredient10]\n                };\n                return result;\n              });\n              this.setState({\n                drinkArray: results,\n                error: \"\"\n              });\n            }\n          }).catch(err => this.setState({\n            error: err.items\n          }));\n          console.log(this.state.drinkArray);\n          break;\n\n        case \"favorites\":\n          event.preventDefault();\n          API.favorites().then(res => {\n            console.log(res);\n\n            if (res.data.drinks === \"error\") {\n              throw new Error(res.data.drinks);\n            } else {\n              let results = res.data.drinks;\n              results = results.map(result => {\n                //store each book information in a new object \n                result = {\n                  key: result.idDrink,\n                  id: result.idDrink,\n                  title: result.strDrink,\n                  img: result.strDrinkThumb,\n                  instructions: result.strInstructions,\n                  ingredient1: result.strIngredient1,\n                  ingredient2: result.strIngredient2,\n                  ingredient3: result.strIngredient3,\n                  ingredient4: result.strIngredient4,\n                  ingredient5: result.strIngredient5,\n                  ingredient6: result.strIngredient6,\n                  ingredient7: result.strIngredient7,\n                  ingredient8: result.strIngredient8,\n                  ingredient9: result.strIngredient9,\n                  ingredient10: result.strIngredient10,\n                  measure1: result.strMeasure1,\n                  measure2: result.strMeasure2,\n                  measure3: result.strMeasure3,\n                  measure4: result.strMeasure4,\n                  measure5: result.strMeasure5,\n                  measure6: result.strMeasure6,\n                  measure7: result.strMeasure7,\n                  measure8: result.strMeasure8,\n                  measure9: result.strMeasure9,\n                  measure10: result.strMeasure10\n                };\n                return result;\n              });\n              this.setState({\n                drinkArray: results,\n                error: \"\"\n              });\n            }\n          }).catch(err => this.setState({\n            error: err.items\n          }));\n          console.log(this.state.drinkArray);\n          break;\n\n        default:\n          break;\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"text-center m-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"SpeakEasy\")), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Search, {\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      handleSelectChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Results, {\n      drinks: this.state.drinkArray,\n      searchBy: this.state.searchBy,\n      handleData: this.handleData,\n      drinkInfo: this.state.searchInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/christianpetersen/dev/uubc/project-3/Speakeasy-1/src/App.js"],"names":["React","Component","Container","Search","Results","API","Nav","axios","App","state","search","searchBy","drinkArray","error","handleInputChange","event","setState","target","value","handleSelectChange","handleFormSubmit","preventDefault","searchByName","then","res","console","log","data","drinks","Error","results","map","result","id","idDrink","title","strDrink","img","strDrinkThumb","instructions","strInstructions","ingredientsArr","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strIngredient7","strIngredient8","strIngredient9","strIngredient10","measureArr","strMeasure1","strMeasure2","strMeasure3","strMeasure4","strMeasure5","strMeasure6","strMeasure7","strMeasure8","strMeasure9","catch","err","items","searchIngredientByName","ingredients","idIngredient","strIngredient","description","strDescription","searchByIngredient","key","random","favorites","ingredient1","ingredient2","ingredient3","ingredient4","ingredient5","ingredient6","ingredient7","ingredient8","ingredient9","ingredient10","measure1","measure2","measure3","measure4","measure5","measure6","measure7","measure8","measure9","measure10","strMeasure10","render","handleData","searchInfo"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport { Container } from \"./components/Grid\";\nimport Search from \"./components/Search\";\nimport Results from './components/Results';\nimport API from \"./utils/API\";\nimport Nav from \"./components/Nav\";\nimport axios from 'axios';\n\nclass App extends Component {\n\n  state = {\n    search: \"\",\n    searchBy: \"\",\n    drinkArray: [],\n\n    // searchedDrink: \"\",\n    // searchedInfo: [],\n    error: \"\"\n  \n  }\n\n  // handleData = event => {\n  //   this.setState({ searchedDrink: event.target.alt })\n  //   console.log(this.state.searchedDrink)\n  //   event.preventDefault();\n  //   API.searchByName(this.state.searchedDrink)\n  //     .then((res) => {\n  //       console.log(res)\n  //       if (res.data.drinks === \"error\") {\n  //         throw new Error(res.data.drinks);\n  //       } else {\n  //         let results = res.data.drinks\n  //         results = results.map(result => {\n  //           //store each book information in a new object \n  //           result = {\n  //             id: result.idDrink,\n  //             title: result.strDrink,\n  //             img: result.strDrinkThumb,\n  //             instructions: result.strInstructions,\n  //             ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4,\n  //             result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9,\n  //             result.strIngredient10],\n  //             measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4,\n  //             result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9,\n  //             result.strIngredient10]\n  //           }\n  //           return result;\n  //         })\n  //         this.setState({ searchedInfo: results, error: \"\" })\n\n  //       }\n  //     })\n  //     .catch(err => this.setState({ error: err.items }));\n\n  //   //if the state matches the event.arget.value no search is needed\n\n  //   // else if state does not match event target hit the api\n  // }\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value })\n  }\n\n  handleSelectChange = event => {\n    this.setState({ searchBy: event.target.value, drinkArray: [] })\n  }\n\n\n  handleFormSubmit = event => {\n    switch (this.state.searchBy) {\n      case \"searchByName\":\n        event.preventDefault();\n        API.searchByName(this.state.search)\n          .then((res) => {\n            console.log(res)\n            if (res.data.drinks === \"error\") {\n              throw new Error(res.data.drinks);\n            } else {\n              let results = res.data.drinks\n              results = results.map(result => {\n                //store each book information in a new object \n                result = {\n                  id: result.idDrink,\n                  title: result.strDrink,\n                  img: result.strDrinkThumb,\n                  instructions: result.strInstructions,\n                  ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4,\n                  result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9,\n                  result.strIngredient10],\n                  measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4,\n                  result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9,\n                  result.strIngredient10]\n                }\n                return result;\n              })\n              this.setState({ drinkArray: results, error: \"\" })\n\n            }\n          })\n          .catch(err => this.setState({ error: err.items }));\n        console.log(this.state.drinkArray)\n        break;\n\n      case \"searchIngredientByName\":\n        event.preventDefault();\n        API.searchIngredientByName(this.state.search)\n          .then((res) => {\n            console.log(res)\n            if (res.data.ingredients === \"error\") {\n              throw new Error(res.data.ingredients);\n            } else {\n              let results = res.data.ingredients\n              results = results.map(result => {\n                //store each book information in a new object \n                result = {\n                  id: result.idIngredient,\n                  title: result.strIngredient,\n                  description: result.strDescription\n                }\n                return result;\n              })\n              this.setState({ drinkArray: results, error: \"\" })\n\n            }\n          })\n          .catch(err => this.setState({ error: err.items }));\n        console.log(this.state.drinkArray)\n        break;\n\n      case \"searchByIngredient\":\n        event.preventDefault();\n        API.searchByIngredient(this.state.search)\n          .then((res) => {\n            console.log(res)\n            if (res.data.drinks === \"error\") {\n              throw new Error(res.data.drinks);\n            } else {\n              let results = res.data.drinks\n              results = results.map(result => {\n                //store each book information in a new object \n\n                result = {\n                  key: result.idDrink,\n                  id: result.idDrink,\n                  title: result.strDrink,\n                  img: result.strDrinkThumb,\n                  instructions: result.strInstructions,\n                  ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4,\n                  result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9,\n                  result.strIngredient10],\n                  measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4,\n                  result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9,\n                  result.strIngredient10]\n                }\n\n                return result;\n              })\n\n              this.setState({ drinkArray: results, error: \"\" })\n\n            }\n          })\n          .catch(err => this.setState({ error: err.items }));\n        console.log(this.state.drinkArray)\n        break;\n\n      case \"random\":\n        event.preventDefault();\n        API.random()\n          .then((res) => {\n            console.log(res)\n            if (res.data.drinks === \"error\") {\n              throw new Error(res.data.drinks);\n            } else {\n              let results = res.data.drinks\n              results = results.map(result => {\n                //store each book information in a new object \n                result = {\n                  key: result.idDrink,\n                  id: result.idDrink,\n                  title: result.strDrink,\n                  img: result.strDrinkThumb,\n                  instructions: result.strInstructions,\n                  ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4,\n                  result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9,\n                  result.strIngredient10],\n                  measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4,\n                  result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9,\n                  result.strIngredient10]\n                }\n                return result;\n              })\n              this.setState({ drinkArray: results, error: \"\" })\n            }\n          })\n          .catch(err => this.setState({ error: err.items }));\n        console.log(this.state.drinkArray)\n        break;\n\n      case \"favorites\":\n        event.preventDefault();\n        API.favorites()\n          .then((res) => {\n            console.log(res)\n            if (res.data.drinks === \"error\") {\n              throw new Error(res.data.drinks);\n            } else {\n              let results = res.data.drinks\n              results = results.map(result => {\n                //store each book information in a new object \n                result = {\n                  key: result.idDrink,\n                  id: result.idDrink,\n                  title: result.strDrink,\n                  img: result.strDrinkThumb,\n                  instructions: result.strInstructions,\n                  ingredient1: result.strIngredient1,\n                  ingredient2: result.strIngredient2,\n                  ingredient3: result.strIngredient3,\n                  ingredient4: result.strIngredient4,\n                  ingredient5: result.strIngredient5,\n                  ingredient6: result.strIngredient6,\n                  ingredient7: result.strIngredient7,\n                  ingredient8: result.strIngredient8,\n                  ingredient9: result.strIngredient9,\n                  ingredient10: result.strIngredient10,\n                  measure1: result.strMeasure1,\n                  measure2: result.strMeasure2,\n                  measure3: result.strMeasure3,\n                  measure4: result.strMeasure4,\n                  measure5: result.strMeasure5,\n                  measure6: result.strMeasure6,\n                  measure7: result.strMeasure7,\n                  measure8: result.strMeasure8,\n                  measure9: result.strMeasure9,\n                  measure10: result.strMeasure10\n                }\n                return result;\n              })\n              this.setState({ drinkArray: results, error: \"\" })\n            }\n          })\n          .catch(err => this.setState({ error: err.items }));\n        console.log(this.state.drinkArray)\n        break;\n\n      default:\n\n        break;\n    }\n  }\n\n  render() {\n    return (\n\n      <div>\n\n\n        <Nav />\n\n        <h1 className=\"text-center m-5\"><b>SpeakEasy</b></h1>\n        <Container>\n          <Search handleFormSubmit={this.handleFormSubmit} handleInputChange={this.handleInputChange} handleSelectChange={this.handleSelectChange} />\n        </Container>\n        <Container>\n          <Results drinks={this.state.drinkArray} searchBy={this.state.searchBy} handleData={this.handleData} drinkInfo={this.state.searchInfo} />\n        </Container>\n\n      </div >\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}