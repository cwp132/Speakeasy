{"ast":null,"code":"var _jsxFileName = \"/Users/cameronlarrabee/dev/uubc/project-3/Speakeasy/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Container } from \"./components/Grid\";\nimport Search from \"./components/Search\";\nimport Results from './components/Results';\nimport API from \"./utils/API\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      searchBy: \"\",\n      drinkArray: [],\n      searchedDrink: \"\",\n      error: \"\"\n    };\n\n    this.handleData = event => {\n      this.setState({\n        searchedDrink: event.target.alt\n      });\n      console.log(this.state.searchedDrink); //if the state matches the event.arget.value no search is needed\n      // else if state does not match event target hit the api\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n      this.apiCall(parm1, parm2);\n    };\n\n    this.handleSelectChange = event => {\n      this.setState({\n        searchBy: event.target.value,\n        drinkArray: []\n      });\n    };\n\n    this.apiCall = (parm1, parm2) => {\n      console.log(parm1, parm2);\n    };\n\n    this.handleFormSubmit = event => {\n      this.apiCall(\"handle\", \"form\"); // switch (this.state.searchBy) {\n      //   case \"searchByName\":\n      //     event.preventDefault();\n      //     API.searchByName(this.state.search)\n      //       .then((res) => {\n      //         console.log(res)\n      //         if (res.data.drinks === \"error\") {\n      //           throw new Error(res.data.drinks);\n      //         } else {\n      //           let results = res.data.drinks\n      //           results = results.map(result => {\n      //             //store each book information in a new object \n      //             result = {\n      //               id: result.idDrink,\n      //               title: result.strDrink,\n      //               img: result.strDrinkThumb,\n      //               instructions: result.strInstructions,\n      //               ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4,\n      //               result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9,\n      //               result.strIngredient10],\n      //               measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4,\n      //               result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9,\n      //               result.strIngredient10]\n      //             }\n      //             return result;\n      //           })\n      //           this.setState({ drinkArray: results, error: \"\" })\n      //         }\n      //       })\n      //       .catch(err => this.setState({ error: err.items }));\n      //     console.log(this.state.drinkArray)\n      //     break;\n      //   case \"searchIngredientByName\":\n      //     event.preventDefault();\n      //     API.searchIngredientByName(this.state.search)\n      //       .then((res) => {\n      //         console.log(res)\n      //         if (res.data.ingredients === \"error\") {\n      //           throw new Error(res.data.ingredients);\n      //         } else {\n      //           let results = res.data.ingredients\n      //           results = results.map(result => {\n      //             //store each book information in a new object \n      //             result = {\n      //               id: result.idIngredient,\n      //               title: result.strIngredient,\n      //               description: result.strDescription\n      //             }\n      //             return result;\n      //           })\n      //           this.setState({ drinkArray: results, error: \"\" })\n      //         }\n      //       })\n      //       .catch(err => this.setState({ error: err.items }));\n      //     console.log(this.state.drinkArray)\n      //     break;\n      //   case \"searchByIngredient\":\n      //     event.preventDefault();\n      //     API.searchByIngredient(this.state.search)\n      //       .then((res) => {\n      //         console.log(res)\n      //         if (res.data.drinks === \"error\") {\n      //           throw new Error(res.data.drinks);\n      //         } else {\n      //           let results = res.data.drinks\n      //           results = results.map(result => {\n      //             //store each book information in a new object \n      //             result = {\n      //               id: result.idDrink,\n      //               title: result.strDrink,\n      //               img: result.strDrinkThumb,\n      //               instructions: result.strInstructions,\n      //               ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4,\n      //               result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9,\n      //               result.strIngredient10],\n      //               measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4,\n      //               result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9,\n      //               result.strIngredient10]\n      //             }\n      //             return result;\n      //           })\n      //           this.setState({ drinkArray: results, error: \"\" })\n      //         }\n      //       })\n      //       .catch(err => this.setState({ error: err.items }));\n      //     console.log(this.state.drinkArray)\n      //     break;\n      //   case \"random\":\n      //     event.preventDefault();\n      //     API.random()\n      //       .then((res) => {\n      //         console.log(res)\n      //         if (res.data.drinks === \"error\") {\n      //           throw new Error(res.data.drinks);\n      //         } else {\n      //           let results = res.data.drinks\n      //           results = results.map(result => {\n      //             //store each book information in a new object \n      //             result = {\n      //               key: result.idDrink,\n      //               id: result.idDrink,\n      //               title: result.strDrink,\n      //               img: result.strDrinkThumb,\n      //               instructions: result.strInstructions,\n      //               ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4,\n      //               result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9,\n      //               result.strIngredient10],\n      //               measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4,\n      //               result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9,\n      //               result.strIngredient10]\n      //             }\n      //             return result;\n      //           })\n      //           this.setState({ drinkArray: results, error: \"\" })\n      //         }\n      //       })\n      //       .catch(err => this.setState({ error: err.items }));\n      //     console.log(this.state.drinkArray)\n      //     break;\n      //   default:\n      //     break;\n      // }\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      className: \"text-center m-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"SpeakEasy\")), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Search, {\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      handleSelectChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Results, {\n      drinks: this.state.drinkArray,\n      searchBy: this.state.searchBy,\n      handleData: this.handleData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cameronlarrabee/dev/uubc/project-3/Speakeasy/src/App.js"],"names":["React","Component","Container","Search","Results","API","App","state","search","searchBy","drinkArray","searchedDrink","error","handleData","event","setState","target","alt","console","log","handleInputChange","value","apiCall","parm1","parm2","handleSelectChange","handleFormSubmit","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,aAAa,EAAE,EAJT;AAKNC,MAAAA,KAAK,EAAE;AALD,KAFkB;;AAAA,SAU1BC,UAV0B,GAUbC,KAAK,IAAI;AACpB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,aAAa,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAA9B,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWI,aAAvB,EAFoB,CAIpB;AAEA;AACD,KAjByB;;AAAA,SAmB1BS,iBAnB0B,GAmBNN,KAAK,IAAI;AAC3B,WAAKC,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAEM,KAAK,CAACE,MAAN,CAAaK;AAAvB,OAAd;AACA,WAAKC,OAAL,CAAaC,KAAb,EAAoBC,KAApB;AACD,KAtByB;;AAAA,SAwB1BC,kBAxB0B,GAwBLX,KAAK,IAAI;AAC5B,WAAKC,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAEK,KAAK,CAACE,MAAN,CAAaK,KAAzB;AAAgCX,QAAAA,UAAU,EAAE;AAA5C,OAAd;AACD,KA1ByB;;AAAA,SA4B1BY,OA5B0B,GA4BhB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1BN,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ,EAAmBC,KAAnB;AACD,KA9ByB;;AAAA,SAgC1BE,gBAhC0B,GAgCPZ,KAAK,IAAI;AAC1B,WAAKQ,OAAL,CAAa,QAAb,EAAuB,MAAvxKyB;AAAA;;AA0K1BK,EAAAA,MAAM,GAAG;AACP,WACE,0CACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAhC,CADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,gBAAgB,EAAE,KAAKD,gBAA/B;AAAiD,MAAA,iBAAiB,EAAE,KAAKN,iBAAzE;AAA4F,MAAA,kBAAkB,EAAE,KAAKK,kBAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWG,UAA5B;AAAwC,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWE,QAA7D;AAAuE,MAAA,UAAU,EAAE,KAAKI,UAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CADF;AAYD;;AAvLyB;;AA4L5B,eAAeP,GAAf","sourcesContent":["\nimport React, { Component } from \"react\";\nimport { Container } from \"./components/Grid\";\nimport Search from \"./components/Search\";\nimport Results from './components/Results';\nimport API from \"./utils/API\";\n\nclass App extends Component {\n\n  state = {\n    search: \"\",\n    searchBy: \"\",\n    drinkArray: [],\n    searchedDrink: \"\",\n    error: \"\"\n  }\n\n  handleData = event => {\n    this.setState({ searchedDrink: event.target.alt })\n    console.log(this.state.searchedDrink)\n\n    //if the state matches the event.arget.value no search is needed\n\n    // else if state does not match event target hit the api\n  }\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value })\n    this.apiCall(parm1, parm2)\n  }\n\n  handleSelectChange = event => {\n    this.setState({ searchBy: event.target.value, drinkArray: [] })\n  }\n\n  apiCall = (parm1, parm2) => {\n    console.log(parm1, parm2)\n  }\n\n  handleFormSubmit = event => {\n    this.apiCall(\"handle\", \"form\")\n    // switch (this.state.searchBy) {\n    //   case \"searchByName\":\n    //     event.preventDefault();\n    //     API.searchByName(this.state.search)\n    //       .then((res) => {\n    //         console.log(res)\n    //         if (res.data.drinks === \"error\") {\n    //           throw new Error(res.data.drinks);\n    //         } else {\n    //           let results = res.data.drinks\n    //           results = results.map(result => {\n    //             //store each book information in a new object \n    //             result = {\n    //               id: result.idDrink,\n    //               title: result.strDrink,\n    //               img: result.strDrinkThumb,\n    //               instructions: result.strInstructions,\n    //               ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4,\n    //               result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9,\n    //               result.strIngredient10],\n    //               measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4,\n    //               result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9,\n    //               result.strIngredient10]\n    //             }\n    //             return result;\n    //           })\n    //           this.setState({ drinkArray: results, error: \"\" })\n\n    //         }\n    //       })\n    //       .catch(err => this.setState({ error: err.items }));\n    //     console.log(this.state.drinkArray)\n    //     break;\n\n    //   case \"searchIngredientByName\":\n    //     event.preventDefault();\n    //     API.searchIngredientByName(this.state.search)\n    //       .then((res) => {\n    //         console.log(res)\n    //         if (res.data.ingredients === \"error\") {\n    //           throw new Error(res.data.ingredients);\n    //         } else {\n    //           let results = res.data.ingredients\n    //           results = results.map(result => {\n    //             //store each book information in a new object \n    //             result = {\n    //               id: result.idIngredient,\n    //               title: result.strIngredient,\n    //               description: result.strDescription\n    //             }\n    //             return result;\n    //           })\n    //           this.setState({ drinkArray: results, error: \"\" })\n\n    //         }\n    //       })\n    //       .catch(err => this.setState({ error: err.items }));\n    //     console.log(this.state.drinkArray)\n    //     break;\n\n    //   case \"searchByIngredient\":\n    //     event.preventDefault();\n    //     API.searchByIngredient(this.state.search)\n    //       .then((res) => {\n    //         console.log(res)\n    //         if (res.data.drinks === \"error\") {\n    //           throw new Error(res.data.drinks);\n    //         } else {\n    //           let results = res.data.drinks\n    //           results = results.map(result => {\n    //             //store each book information in a new object \n\n    //             result = {\n    //               id: result.idDrink,\n    //               title: result.strDrink,\n    //               img: result.strDrinkThumb,\n    //               instructions: result.strInstructions,\n    //               ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4,\n    //               result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9,\n    //               result.strIngredient10],\n    //               measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4,\n    //               result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9,\n    //               result.strIngredient10]\n    //             }\n\n    //             return result;\n    //           })\n\n\n    //           this.setState({ drinkArray: results, error: \"\" })\n\n    //         }\n    //       })\n    //       .catch(err => this.setState({ error: err.items }));\n    //     console.log(this.state.drinkArray)\n    //     break;\n\n    //   case \"random\":\n    //     event.preventDefault();\n    //     API.random()\n    //       .then((res) => {\n    //         console.log(res)\n    //         if (res.data.drinks === \"error\") {\n    //           throw new Error(res.data.drinks);\n    //         } else {\n    //           let results = res.data.drinks\n    //           results = results.map(result => {\n    //             //store each book information in a new object \n    //             result = {\n    //               key: result.idDrink,\n    //               id: result.idDrink,\n    //               title: result.strDrink,\n    //               img: result.strDrinkThumb,\n    //               instructions: result.strInstructions,\n    //               ingredientsArr: [result.strIngredient1, result.strIngredient2, result.strIngredient3, result.strIngredient4,\n    //               result.strIngredient5, result.strIngredient6, result.strIngredient7, result.strIngredient8, result.strIngredient9,\n    //               result.strIngredient10],\n    //               measureArr: [result.strMeasure1, result.strMeasure2, result.strMeasure3, result.strMeasure4,\n    //               result.strMeasure5, result.strMeasure6, result.strMeasure7, result.strMeasure8, result.strMeasure9,\n    //               result.strIngredient10]\n    //             }\n    //             return result;\n    //           })\n    //           this.setState({ drinkArray: results, error: \"\" })\n    //         }\n    //       })\n    //       .catch(err => this.setState({ error: err.items }));\n    //     console.log(this.state.drinkArray)\n    //     break;\n\n    //   default:\n\n    //     break;\n    // }\n  }\n\n  render() {\n    return (\n      <>\n        <h1 className=\"text-center m-5\"><b>SpeakEasy</b></h1>\n        <Container>\n          <Search handleFormSubmit={this.handleFormSubmit} handleInputChange={this.handleInputChange} handleSelectChange={this.handleSelectChange} />\n        </Container>\n        <Container>\n          <Results drinks={this.state.drinkArray} searchBy={this.state.searchBy} handleData={this.handleData} />\n        </Container>\n\n      </ >\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}